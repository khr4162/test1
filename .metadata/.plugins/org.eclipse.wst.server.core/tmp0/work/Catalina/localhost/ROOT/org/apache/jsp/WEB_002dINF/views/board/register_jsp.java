/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.75
 * Generated at: 2023-06-21 01:25:39 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.board;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class register_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("jar:file:/D:/_Spring_workspace2/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/SpringWorkspace/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1685924161901L));
    _jspx_dependants.put("/WEB-INF/views/layout/footer.jsp", Long.valueOf(1687228978168L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("    \n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<title>Register Page</title>\n");
      out.write("<style type=\"text/css\">\n");
      out.write("	h1{\n");
      out.write("	text-align: center;\n");
      out.write("	padding-top: 120px;\n");
      out.write("	}\n");
      out.write("	\n");
      out.write("	body{\n");
      out.write("	background-color: azure;\n");
      out.write("	margin: auto;\n");
      out.write("	text-align: center;\n");
      out.write("	}\n");
      out.write("\n");
      out.write("	.box1{\n");
      out.write("	text-align: center;\n");
      out.write("	background-color: white;\n");
      out.write("	width: 500px;\n");
      out.write("	vertical-align: middle;\n");
      out.write("	display: inline-block;\n");
      out.write("	position: absolute;\n");
      out.write("	top: 40%;\n");
      out.write(" 	left: 50%;\n");
      out.write(" 	transform: translate(-50%, -50%);\n");
      out.write("	}\n");
      out.write("		\n");
      out.write("	.btn1{\n");
      out.write("	font-size: 20px;\n");
      out.write("	padding: 5px;\n");
      out.write("	display: inline-block;\n");
      out.write("	margin-top: 40px;\n");
      out.write("	}\n");
      out.write("	\n");
      out.write("	.box1> h3{\n");
      out.write("	margin-top: 75px;\n");
      out.write("	}\n");
      out.write("	\n");
      out.write("	.btn2{\n");
      out.write("	display: inline;\n");
      out.write("	}\n");
      out.write("		\n");
      out.write("	</style>\n");
      out.write("<link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-rbsA2VBKQhggwzxH7pPCaAqO46MgnOM80zW1RWuH61DGLwZJEdK2Kadq2F9CUG65\" crossorigin=\"anonymous\">\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-kenU1KFdBIe4zVF0s0G1M5b4hcpxyD9F7jL+jjXkk+Q2h455rYXK/7HAuoJl+0I4\" crossorigin=\"anonymous\"></script>\n");
      out.write("<h1>게시글 작성</h1>\n");
      out.write("<form action=\"/board/register\" method=\"post\" enctype=\"multipart/form-data\"><br>\n");
      out.write("<div class=\"box1\">\n");
      out.write("<div class=\"input-group mb-3\">\n");
      out.write("  <span class=\"input-group-text\" id=\"basic-addon1\">제목</span>\n");
      out.write("  <input type=\"text\" name=\"title\" class=\"form-control\" aria-label=\"Username\" aria-describedby=\"basic-addon1\">\n");
      out.write("</div>\n");
      out.write("<div class=\"input-group mb-3\">\n");
      out.write("  <span class=\"input-group-text\" id=\"basic-addon1\">작성자</span>\n");
      out.write("  <input type=\"text\" name=\"writer\" class=\"form-control\" aria-label=\"Username\" aria-describedby=\"basic-addon1\"value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ses.id }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" readonly=\"readonly\">\n");
      out.write("</div>\n");
      out.write("<div class=\"input-group mb-3\">\n");
      out.write("  <span class=\"input-group-text\" id=\"basic-addon1\">내용</span>\n");
      out.write("  <input type=\"text\" name=\"content\" class=\"form-control\" aria-label=\"Username\" aria-describedby=\"basic-addon1\">\n");
      out.write("</div>\n");
      out.write("<div class=\"input-group mb-3\">\n");
      out.write("  <span class=\"input-group-text\" id=\"basic-addon1\">파일</span>\n");
      out.write("  <input type=\"file\" name=\"files\" id=\"file\" class=\"form-control\" aria-label=\"Username\" aria-describedby=\"basic-addon1\" multiple=\"multiple\">\n");
      out.write("</div>\n");
      out.write("<!-- \n");
      out.write("\n");
      out.write("<button id=\"trigger\" type=\"button\" name=\"btn2\">파일 추가</button><br>\n");
      out.write(" -->\n");
      out.write("<div id=\"fileZone\">\n");
      out.write("\n");
      out.write("</div>\n");
      out.write("<button>올리기</button><br>\n");
      out.write("<a href=\"/\"><button type=\"button\">home</button></a>\n");
      out.write("</div>\n");
      out.write("</form>\n");
      out.write("<script type=\"text/javascript\" \n");
      out.write("src=\"/resources/JS/boardRegister.js\"></script>\n");
      out.write("<br>\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<title>Insert title here</title>\n");
      out.write("<style type=\"text/css\">\n");
      out.write("#wrap{\n");
      out.write("	background-color: rightgray;\n");
      out.write("	width: 100%;\n");
      out.write("	height: 30px;\n");
      out.write("}\n");
      out.write("footer{\n");
      out.write("	font-weight: bold;\n");
      out.write("	font-size: 20px;\n");
      out.write("	text-align: center;\n");
      out.write("	position: absolute;\n");
      out.write("	bottom: 0px;\n");
      out.write("	margin: auto;\n");
      out.write("	}\n");
      out.write("</style>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("<div id=\"wrap\">\n");
      out.write(" <footer>이 게시글은 형래가 만들었고... 어... 음... 또... 이건 footer!!\n");
      out.write(" </footer>\n");
      out.write("</div>\n");
      out.write("</body>\n");
      out.write("</html>");
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
